<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="importWholeDrawingToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Odczytaj wszystkie pociągnięcia z płótna i przekonwertuj je na kod GCode.</value>
  </data>
  <data name="CbMovementPenUp.Text" xml:space="preserve">
    <value>Przesuń, gdy pióro jest w górze</value>
  </data>
  <data name="CbMovementPenUp.ToolTip" xml:space="preserve">
    <value>Wysyłaj również polecenia ruchu do plotera, jeśli pióro jest w górze.</value>
  </data>
  <data name="BtnRefresh.Text" xml:space="preserve">
    <value>⟳</value>
  </data>
  <data name="BtnRefresh.ToolTip" xml:space="preserve">
    <value>Aktualizuj widok 2D</value>
  </data>
  <data name="NudSizePen.ToolTip" xml:space="preserve">
    <value>Rzeczywista szerokość pióra, potrzebna do wyświetlenia prawidłowej szerokości pióra na płótnie.</value>
  </data>
  <data name="NudSizeY.ToolTip" xml:space="preserve">
    <value>Wysokość płótna zostanie przetłumaczona na wysokość tego plotera.</value>
  </data>
  <data name="NudSizeX.ToolTip" xml:space="preserve">
    <value>Szerokość płótna zostanie przetłumaczona na szerokość tego plotera.</value>
  </data>
  <data name="tBflowControl.ToolTip" xml:space="preserve">
    <value>Przypisz zwykły GCode, rozdziel kod na różne linie używając ';' jako separatora.
Lub przypisz nazwę pliku zawierającą GCode.</value>
  </data>
  <data name="cBToolChange.Text" xml:space="preserve">
    <value>Wykonaj zmianę narzędzia w Tx M06</value>
  </data>
  <data name="cBToolChange.ToolTip" xml:space="preserve">
    <value>Wykonaj następujące skrypty w poleceniach Tx M06</value>
  </data>
  <data name="cBImportGCToolM0.Text" xml:space="preserve">
    <value>Zamiast tego dodaj Pauzę (M0)</value>
  </data>
  <data name="cBImportGCToolM0.ToolTip" xml:space="preserve">
    <value>Zastąp polecenie M06 (zmiana narzędzia) poleceniem M0 (pauza) w celu ręcznej zmiany narzędzia.</value>
  </data>
  <data name="cBImportGCTool.Text" xml:space="preserve">
    <value>Dodaj polecenie zmiany narzędzia Tx M06</value>
  </data>
  <data name="cBImportGCTool.ToolTip" xml:space="preserve">
    <value>Wykonaj akcję zmiany narzędzia w poleceniach Tx M06, jeśli informacje są dostępne — sprawdź kartę „Zmiana narzędzia”.</value>
  </data>
  <data name="GbMode.Text" xml:space="preserve">
    <value>Tryb edycji</value>
  </data>
  <data name="CbUpdate.Text" xml:space="preserve">
    <value>Aktualizuj widok 2D</value>
  </data>
  <data name="GbPlotter.Text" xml:space="preserve">
    <value>Aktualizacja plotera na żywo</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Maks. szerokość obrysu</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Y/Wysokość</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>X/Szerokość</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Widoczna szerokość pisaka zależy od wybranego rozmiaru roboczego plotera</value>
  </data>
  <data name="CbTransparency.Text" xml:space="preserve">
    <value>Pokaż przezroczystość</value>
  </data>
  <data name="LblToolTable.Text" xml:space="preserve">
    <value>Załaduj tabelę narzędzi</value>
  </data>
  <data name="GbToolChange.Text" xml:space="preserve">
    <value>Z formularza konfiguracji</value>
  </data>
  <data name="cBflowControl.Text" xml:space="preserve">
    <value>Wyślij kod G po wstrzymaniu</value>
  </data>
  <data name="BtnOpenSetup.Text" xml:space="preserve">
    <value>Otwórz formularz konfiguracji</value>
  </data>
  <data name="CboxToolFiles.Text" xml:space="preserve">
    <value>Ostatnio załadowana tabela narzędzi</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Wybrany kolor</value>
  </data>
  <data name="saveToolStripMenuItem.Text" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="RbMode0.Text" xml:space="preserve">
    <value>Narysuj</value>
  </data>
  <data name="RbMode1.Text" xml:space="preserve">
    <value>Wybierz</value>
  </data>
  <data name="RbMode2.Text" xml:space="preserve">
    <value>Usuń punkt</value>
  </data>
  <data name="RbMode3.Text" xml:space="preserve">
    <value>Usuń obrys</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Tablet graficzny</value>
  </data>
  <data name="BtnHelp.ToolTip" xml:space="preserve">
    <value>Pomoc online</value>
  </data>
  <data name="CboxPapersize.Text" xml:space="preserve">
    <value>Wybierz standardowy rozmiar</value>
  </data>
  <data name="CboxPapersize.ToolTip" xml:space="preserve">
    <value>Jednostki zostaną przeliczone na mm</value>
  </data>
  <data name="CbUpdate.ToolTip" xml:space="preserve">
    <value>ペンを持ち上げた後の2Dビュー</value>
  </data>
  <data name="RbMode3.ToolTip" xml:space="preserve">
    <value>Kliknij linię, aby ją usunąć</value>
  </data>
  <data name="RbMode2.ToolTip" xml:space="preserve">
    <value>Kliknij określony punkt linii, aby go usunąć</value>
  </data>
  <data name="CbFitToCurve.Text" xml:space="preserve">
    <value>Dopasuj do krzywej</value>
  </data>
  <data name="CbFitToCurve.ToolTip" xml:space="preserve">
    <value>Po zakończeniu linii jest ona wygładzana.</value>
  </data>
  <data name="RbMode1.ToolTip" xml:space="preserve">
    <value>Wybierz linię, klikając ją, lub niektóre linie, otaczając je, aby je przesunąć, skalować lub usunąć.</value>
  </data>
  <data name="RbMode0.ToolTip" xml:space="preserve">
    <value>Rysuj linie wybranym kolorem.</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Aktualizacja na żywo</value>
  </data>
  <data name="GbSize.Text" xml:space="preserve">
    <value>Rozmiar roboczy plotera</value>
  </data>
  <data name="GbPen.Text" xml:space="preserve">
    <value>Rozmiar pióra/pędzla</value>
  </data>
  <data name="GbColor.Text" xml:space="preserve">
    <value>Kolor</value>
  </data>
  <data name="LblInfo.Text" xml:space="preserve">
    <value>Rysik to cyfrowy długopis, który również dostarcza wartość nacisku (od 0% do 100%). Ta wartość nacisku kontroluje szerokość długopisu i może być przekonwertowana na wartość Z (dla osi Z) lub wartość S (dla serwa RC), aby kontrolować nacisk długopisu plotera. 
Mysz dostarcza stałą wartość nacisku 50%.</value>
  </data>
  <data name="BtnReduce.Text" xml:space="preserve">
    <value>Zastosuj wartość</value>
  </data>
  <data name="BtnReduce.ToolTip" xml:space="preserve">
    <value>Zmniejsz liczbę punktów danych na pociągnięcie pędzlem. Zachowaj minimalną odległość. Zastosuj nową wartość do wszystkich pociągnięć pędzlem.</value>
  </data>
  <data name="NudPointDistance.ToolTip" xml:space="preserve">
    <value>Minimalna odległość między punktami kreskowania zostanie zastosowana po zakończeniu kreskowania.</value>
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value>Szerokość pociągnięcia przy 100% nacisku</value>
  </data>
  <data name="BtnSwitchXy.ToolTip" xml:space="preserve">
    <value>Zamień wartości X i Y</value>
  </data>
  <data name="BtnCloseSetup.Text" xml:space="preserve">
    <value>Zamknij</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="toolStripMenuItem1.Text" xml:space="preserve">
    <value>Plik</value>
  </data>
  <data name="openToolStripMenuItem.Text" xml:space="preserve">
    <value>Otwórz</value>
  </data>
  <data name="toolStripMenuItem2.Text" xml:space="preserve">
    <value>Utwórz</value>
  </data>
  <data name="dLiveUpdateToolStripMenuItem.Text" xml:space="preserve">
    <value>Aktualizacja widoku 2D na żywo</value>
  </data>
  <data name="dLiveUpdateToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Dodaj każdy ukończony obrys do widoku 2D w formularzu głównym</value>
  </data>
  <data name="importWholeDrawingToolStripMenuItem.Text" xml:space="preserve">
    <value>Importuj cały rysunek</value>
  </data>
  <data name="plotterToolStripMenuItem.Text" xml:space="preserve">
    <value>Ploter</value>
  </data>
  <data name="liveUpdateToolStripMenuItem.Text" xml:space="preserve">
    <value>Aktualizacja na żywo</value>
  </data>
  <data name="liveUpdateToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Aktualizuj pozycję plotera po poruszeniu piórem lub myszą.</value>
  </data>
  <data name="setupToolStripMenuItem.Text" xml:space="preserve">
    <value>Konfiguracja / Pomoc</value>
  </data>
  <data name="MenuNewClear.Text" xml:space="preserve">
    <value>Nowy (wyczyść płótno)</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Minimalna odległość</value>
  </data>
  <data name="LblStrokes.Text" xml:space="preserve">
    <value>Kres narysowany rysikiem składa się z niezliczonej liczby współrzędnych punktów. Po zakończeniu kreskowania liczba punktów jest redukowana do niezbędnej wartości.</value>
  </data>
  <data name="GbModify.Text" xml:space="preserve">
    <value>Modyfikuj kreskowania</value>
  </data>
  <data name="CbMovementMouse.Text" xml:space="preserve">
    <value>Przesuń również za pomocą ruchu myszy</value>
  </data>
  <data name="importXyzDataToolStripMenuItem.Text" xml:space="preserve">
    <value>Importuj dane xyz</value>
  </data>
  <data name="importXyzDataToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Importuj dane XYZ ze schowka (wartości rozdzielone tabulatorem x y z lub x z)</value>
  </data>
</root>