<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="importWholeDrawingToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Leer todos los trazos del lienzo y convertirlos a código G.</value>
  </data>
  <data name="CbMovementPenUp.Text" xml:space="preserve">
    <value>Mover al levantar la pluma</value>
  </data>
  <data name="CbMovementPenUp.ToolTip" xml:space="preserve">
    <value>También envía comandos de movimiento al plotter si la pluma está levantada.</value>
  </data>
  <data name="BtnRefresh.Text" xml:space="preserve">
    <value>⟳</value>
  </data>
  <data name="BtnRefresh.ToolTip" xml:space="preserve">
    <value>Actualizar vista 2D</value>
  </data>
  <data name="NudSizePen.ToolTip" xml:space="preserve">
    <value>Ancho real de la pluma, necesario para mostrar el ancho correcto de la pluma en el lienzo.</value>
  </data>
  <data name="NudSizeY.ToolTip" xml:space="preserve">
    <value>La altura del lienzo se traducirá a la altura de este plotter.</value>
  </data>
  <data name="NudSizeX.ToolTip" xml:space="preserve">
    <value>El ancho del lienzo se traducirá a la anchura de este plotter.</value>
  </data>
  <data name="tBflowControl.ToolTip" xml:space="preserve">
    <value>Asigna un GCode normal y separa el código en diferentes líneas usando ';' como separador.
O bien, asigna un nombre de archivo que contenga GCode.</value>
  </data>
  <data name="cBToolChange.Text" xml:space="preserve">
    <value>Realizar cambio de herramienta en Tx M06</value>
  </data>
  <data name="cBToolChange.ToolTip" xml:space="preserve">
    <value>Ejecutar los siguientes scripts en los comandos Tx M06</value>
  </data>
  <data name="cBImportGCToolM0.Text" xml:space="preserve">
    <value>Añadir Pausa (M0)</value>
  </data>
  <data name="cBImportGCToolM0.ToolTip" xml:space="preserve">
    <value>Reemplazar cualquier comando M06 (cambio de herramienta) por M0 (pausa) para el cambio manual de herramienta.</value>
  </data>
  <data name="cBImportGCTool.Text" xml:space="preserve">
    <value>Añadir comando de cambio de herramienta Tx M06</value>
  </data>
  <data name="cBImportGCTool.ToolTip" xml:space="preserve">
    <value>Realizar la acción de cambio de herramienta en los comandos Tx M06 si hay información disponible; consultar la pestaña "Cambio de herramienta".</value>
  </data>
  <data name="GbMode.Text" xml:space="preserve">
    <value>Modo de edición</value>
  </data>
  <data name="CbUpdate.Text" xml:space="preserve">
    <value>Actualizar vista 2D</value>
  </data>
  <data name="GbPlotter.Text" xml:space="preserve">
    <value>Actualización en vivo del trazador</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Máx. ancho de trazo</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Y / Altura</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>X / Ancho</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>El ancho visible de la pluma depende del tamaño de trabajo del plotter seleccionado.</value>
  </data>
  <data name="CbTransparency.Text" xml:space="preserve">
    <value>Mostrar transparencia</value>
  </data>
  <data name="LblToolTable.Text" xml:space="preserve">
    <value>Cargar tabla de herramientas</value>
  </data>
  <data name="GbToolChange.Text" xml:space="preserve">
    <value>Desde el formulario de configuración</value>
  </data>
  <data name="cBflowControl.Text" xml:space="preserve">
    <value>Enviar código G al pausar</value>
  </data>
  <data name="BtnOpenSetup.Text" xml:space="preserve">
    <value>Abrir formulario de configuración</value>
  </data>
  <data name="CboxToolFiles.Text" xml:space="preserve">
    <value>Última tabla de herramientas cargada</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Color seleccionado</value>
  </data>
  <data name="saveToolStripMenuItem.Text" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="RbMode0.Text" xml:space="preserve">
    <value>Dibujar</value>
  </data>
  <data name="RbMode1.Text" xml:space="preserve">
    <value>Seleccionar</value>
  </data>
  <data name="RbMode2.Text" xml:space="preserve">
    <value>Eliminar punto</value>
  </data>
  <data name="RbMode3.Text" xml:space="preserve">
    <value>Eliminar trazo</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>tableta gráfica</value>
  </data>
  <data name="BtnHelp.ToolTip" xml:space="preserve">
    <value>Ayuda en línea</value>
  </data>
  <data name="CboxPapersize.Text" xml:space="preserve">
    <value>Elige un tamaño estándar</value>
  </data>
  <data name="CboxPapersize.ToolTip" xml:space="preserve">
    <value>Las unidades se convertirán a mm</value>
  </data>
  <data name="CbUpdate.ToolTip" xml:space="preserve">
    <value>Vista 2D después de levantar el bolígrafo</value>
  </data>
  <data name="RbMode3.ToolTip" xml:space="preserve">
    <value>Haz clic en una línea para eliminarla</value>
  </data>
  <data name="RbMode2.ToolTip" xml:space="preserve">
    <value>Haz clic en un punto específico de una línea para eliminarlo</value>
  </data>
  <data name="CbFitToCurve.Text" xml:space="preserve">
    <value>Ajustar a la curva</value>
  </data>
  <data name="CbFitToCurve.ToolTip" xml:space="preserve">
    <value>Después de completar una línea, se suaviza.</value>
  </data>
  <data name="RbMode1.ToolTip" xml:space="preserve">
    <value>Selecciona una línea haciendo clic en ella o varias líneas rodeándolas para moverlas, escalarlas o eliminarlas.</value>
  </data>
  <data name="RbMode0.ToolTip" xml:space="preserve">
    <value>Dibuja líneas con el color seleccionado.</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Actualización en vivo</value>
  </data>
  <data name="GbSize.Text" xml:space="preserve">
    <value>Tamaño de trabajo del plotter</value>
  </data>
  <data name="GbPen.Text" xml:space="preserve">
    <value>Tamaño de pluma/pincel</value>
  </data>
  <data name="GbColor.Text" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="LblInfo.Text" xml:space="preserve">
    <value>Un lápiz digital proporciona un valor de presión (del 0 % al 100 %). Este valor controla el ancho del lápiz y puede convertirse en un valor Z (para el eje Z) o en un valor S (para un servocontrolador RC) para controlar la presión del lápiz del plotter. Un ratón proporciona un valor de presión constante del 50 %.</value>
  </data>
  <data name="BtnReduce.Text" xml:space="preserve">
    <value>Aplicar valor</value>
  </data>
  <data name="BtnReduce.ToolTip" xml:space="preserve">
    <value>Reducir la cantidad de puntos de datos por trazo. Mantener la distancia mínima. Aplicar el nuevo valor a todos los trazos.</value>
  </data>
  <data name="NudPointDistance.ToolTip" xml:space="preserve">
    <value>La distancia mínima entre los puntos del trazo se aplicará al finalizarlo.</value>
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value>Ancho de trazo al 100 % de presión</value>
  </data>
  <data name="BtnSwitchXy.ToolTip" xml:space="preserve">
    <value>Intercambiar valores de X e Y</value>
  </data>
  <data name="BtnCloseSetup.Text" xml:space="preserve">
    <value>Cerrar</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="toolStripMenuItem1.Text" xml:space="preserve">
    <value>Archivo</value>
  </data>
  <data name="openToolStripMenuItem.Text" xml:space="preserve">
    <value>Abrir</value>
  </data>
  <data name="toolStripMenuItem2.Text" xml:space="preserve">
    <value>Crear</value>
  </data>
  <data name="dLiveUpdateToolStripMenuItem.Text" xml:space="preserve">
    <value>Actualización en tiempo real de la vista 2D</value>
  </data>
  <data name="dLiveUpdateToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Añadir cada trazo terminado a la vista 2D en el formulario principal</value>
  </data>
  <data name="importWholeDrawingToolStripMenuItem.Text" xml:space="preserve">
    <value>Importar dibujo completo</value>
  </data>
  <data name="plotterToolStripMenuItem.Text" xml:space="preserve">
    <value>Plotter</value>
  </data>
  <data name="liveUpdateToolStripMenuItem.Text" xml:space="preserve">
    <value>Actualización en vivo</value>
  </data>
  <data name="liveUpdateToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Actualiza la posición del plotter al mover el lápiz o el ratón.</value>
  </data>
  <data name="setupToolStripMenuItem.Text" xml:space="preserve">
    <value>Configuración / Ayuda</value>
  </data>
  <data name="MenuNewClear.Text" xml:space="preserve">
    <value>Nuevo (lienzo en blanco)</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Distancia mínima</value>
  </data>
  <data name="LblStrokes.Text" xml:space="preserve">
    <value>Un trazo dibujado con el lápiz óptico consta de innumerables coordenadas de puntos. Tras completar un trazo, el número de puntos se reduce al necesario.</value>
  </data>
  <data name="GbModify.Text" xml:space="preserve">
    <value>Modificar trazos</value>
  </data>
  <data name="CbMovementMouse.Text" xml:space="preserve">
    <value>Mover también con el movimiento del ratón</value>
  </data>
  <data name="importXyzDataToolStripMenuItem.Text" xml:space="preserve">
    <value>Importar datos xyz</value>
  </data>
  <data name="importXyzDataToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Importar datos XYZ desde el portapapeles (valores separados por tabulaciones x y z o x z)</value>
  </data>
</root>