<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="importWholeDrawingToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Lire tous les traits du canevas et les convertir en GCode.</value>
  </data>
  <data name="CbMovementPenUp.Text" xml:space="preserve">
    <value>Déplacement lorsque le stylet est levé</value>
  </data>
  <data name="CbMovementPenUp.ToolTip" xml:space="preserve">
    <value>Envoie également des commandes de déplacement au traceur si le stylet est levé.</value>
  </data>
  <data name="BtnRefresh.Text" xml:space="preserve">
    <value>⟳</value>
  </data>
  <data name="BtnRefresh.ToolTip" xml:space="preserve">
    <value>Mettre à jour la vue 2D</value>
  </data>
  <data name="NudSizePen.ToolTip" xml:space="preserve">
    <value>Largeur réelle du stylet, nécessaire pour afficher la largeur correcte du stylet sur la zone de dessin.</value>
  </data>
  <data name="NudSizeY.ToolTip" xml:space="preserve">
    <value>La hauteur de la zone de dessin sera convertie à cette hauteur du traceur.</value>
  </data>
  <data name="NudSizeX.ToolTip" xml:space="preserve">
    <value>La largeur de la zone de dessin sera convertie à cette largeur du traceur.</value>
  </data>
  <data name="tBflowControl.ToolTip" xml:space="preserve">
    <value>Attribuez un GCode standard, séparez le code en différentes lignes à l'aide du séparateur « ; ». Ou attribuez un nom de fichier contenant du GCode.</value>
  </data>
  <data name="cBToolChange.Text" xml:space="preserve">
    <value>Exécuter un changement d'outil sur la Tx M06</value>
  </data>
  <data name="cBToolChange.ToolTip" xml:space="preserve">
    <value>Exécuter les scripts suivants sur les commandes Tx M06</value>
  </data>
  <data name="cBImportGCToolM0.Text" xml:space="preserve">
    <value>Ajouter Pause (M0) à la place</value>
  </data>
  <data name="cBImportGCToolM0.ToolTip" xml:space="preserve">
    <value>Remplacer toute commande M06 (changement d'outil) par M0 (pause) pour un changement d'outil manuel.</value>
  </data>
  <data name="cBImportGCTool.Text" xml:space="preserve">
    <value>Ajouter une commande Changement d'outil Tx M06</value>
  </data>
  <data name="cBImportGCTool.ToolTip" xml:space="preserve">
    <value>Exécuter un changement d'outil sur les commandes Tx M06 si les informations sont disponibles ; consulter l'onglet « Changement d'outil ».</value>
  </data>
  <data name="GbMode.Text" xml:space="preserve">
    <value>Mode Édition</value>
  </data>
  <data name="CbUpdate.Text" xml:space="preserve">
    <value>Mettre à jour la vue 2D</value>
  </data>
  <data name="GbPlotter.Text" xml:space="preserve">
    <value>Mise à jour en direct du traceur</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Max. largeur de trait</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Y / Hauteur</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>X / Largeur</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>La largeur visible du stylo dépend de la taille de travail du traceur sélectionné</value>
  </data>
  <data name="CbTransparency.Text" xml:space="preserve">
    <value>Afficher la transparence</value>
  </data>
  <data name="LblToolTable.Text" xml:space="preserve">
    <value>Charger la table d'outils</value>
  </data>
  <data name="GbToolChange.Text" xml:space="preserve">
    <value>Depuis le formulaire de configuration</value>
  </data>
  <data name="cBflowControl.Text" xml:space="preserve">
    <value>Envoyer le Gcode en pause</value>
  </data>
  <data name="BtnOpenSetup.Text" xml:space="preserve">
    <value>Ouvrir le formulaire de configuration</value>
  </data>
  <data name="CboxToolFiles.Text" xml:space="preserve">
    <value>Dernier tableau d'outils chargé</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Couleur sélectionnée</value>
  </data>
  <data name="saveToolStripMenuItem.Text" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="RbMode0.Text" xml:space="preserve">
    <value>Dessiner.</value>
  </data>
  <data name="RbMode1.Text" xml:space="preserve">
    <value>Sélectionner.</value>
  </data>
  <data name="RbMode2.Text" xml:space="preserve">
    <value>Supprimer un point.</value>
  </data>
  <data name="RbMode3.Text" xml:space="preserve">
    <value>Supprimer le trait</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Tablette graphique</value>
  </data>
  <data name="BtnHelp.ToolTip" xml:space="preserve">
    <value>Aide en ligne</value>
  </data>
  <data name="CboxPapersize.Text" xml:space="preserve">
    <value>Choisissez une taille standard</value>
  </data>
  <data name="CboxPapersize.ToolTip" xml:space="preserve">
    <value>Les unités seront converties en mm</value>
  </data>
  <data name="CbUpdate.ToolTip" xml:space="preserve">
    <value>Vue 2D après avoir levé le stylo</value>
  </data>
  <data name="RbMode3.ToolTip" xml:space="preserve">
    <value>Cliquez sur une ligne pour la supprimer.</value>
  </data>
  <data name="RbMode2.ToolTip" xml:space="preserve">
    <value>Cliquez sur un point spécifique d'une ligne pour le supprimer.</value>
  </data>
  <data name="CbFitToCurve.Text" xml:space="preserve">
    <value>Ajuster à la courbe.</value>
  </data>
  <data name="CbFitToCurve.ToolTip" xml:space="preserve">
    <value>Une fois la ligne terminée, elle est lissée.</value>
  </data>
  <data name="RbMode1.ToolTip" xml:space="preserve">
    <value>Sélectionnez une ligne en cliquant dessus ou plusieurs lignes en les entourant pour les déplacer, les redimensionner ou les supprimer.</value>
  </data>
  <data name="RbMode0.ToolTip" xml:space="preserve">
    <value>Dessiner des lignes avec la couleur sélectionnée.</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Mise à jour en direct</value>
  </data>
  <data name="GbSize.Text" xml:space="preserve">
    <value>Taille de travail du traceur</value>
  </data>
  <data name="GbPen.Text" xml:space="preserve">
    <value>Taille du stylet/pinceau</value>
  </data>
  <data name="GbColor.Text" xml:space="preserve">
    <value>Couleur</value>
  </data>
  <data name="LblInfo.Text" xml:space="preserve">
    <value>Un stylet est un stylo numérique qui fournit également une valeur de pression (de 0 % à 100 %). Cette valeur contrôle la largeur du stylo et peut être convertie en valeur Z (pour un axe Z) ou S (pour un servomoteur RC) afin de contrôler la pression du stylo du traceur.
Une souris fournit une valeur de pression constante de 50 %.</value>
  </data>
  <data name="BtnReduce.Text" xml:space="preserve">
    <value>Appliquer la valeur</value>
  </data>
  <data name="BtnReduce.ToolTip" xml:space="preserve">
    <value>Réduire le nombre de points de données par trait. Maintenir une distance minimale. Appliquer la nouvelle valeur à tous les traits.</value>
  </data>
  <data name="NudPointDistance.ToolTip" xml:space="preserve">
    <value>La distance minimale entre les points du trait sera appliquée après la fin du trait.</value>
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value>Largeur de trait à 100 % de pression</value>
  </data>
  <data name="BtnSwitchXy.ToolTip" xml:space="preserve">
    <value>Inverser les valeurs X et Y</value>
  </data>
  <data name="BtnCloseSetup.Text" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="toolStripMenuItem1.Text" xml:space="preserve">
    <value>Fichier</value>
  </data>
  <data name="openToolStripMenuItem.Text" xml:space="preserve">
    <value>Ouvrir</value>
  </data>
  <data name="toolStripMenuItem2.Text" xml:space="preserve">
    <value>Créer</value>
  </data>
  <data name="dLiveUpdateToolStripMenuItem.Text" xml:space="preserve">
    <value>Mise à jour en direct de la vue 2D</value>
  </data>
  <data name="dLiveUpdateToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Ajouter chaque trait terminé à la vue 2D du formulaire principal</value>
  </data>
  <data name="importWholeDrawingToolStripMenuItem.Text" xml:space="preserve">
    <value>Importer le dessin entier</value>
  </data>
  <data name="plotterToolStripMenuItem.Text" xml:space="preserve">
    <value>Traceur</value>
  </data>
  <data name="liveUpdateToolStripMenuItem.Text" xml:space="preserve">
    <value>Mise à jour en direct</value>
  </data>
  <data name="liveUpdateToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Mise à jour de la position du traceur en fonction du mouvement du stylet ou de la souris.</value>
  </data>
  <data name="setupToolStripMenuItem.Text" xml:space="preserve">
    <value>Configuration / Aide</value>
  </data>
  <data name="MenuNewClear.Text" xml:space="preserve">
    <value>Nouveau (effacer la zone de travail)</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Distance minimale</value>
  </data>
  <data name="LblStrokes.Text" xml:space="preserve">
    <value>Un trait tracé au stylet est composé d'innombrables coordonnées de points. Une fois le trait terminé, le nombre de points est réduit au nombre nécessaire.</value>
  </data>
  <data name="GbModify.Text" xml:space="preserve">
    <value>Modifier les traits</value>
  </data>
  <data name="CbMovementMouse.Text" xml:space="preserve">
    <value>Déplacez-vous également sur le mouvement de la souris</value>
  </data>
  <data name="importXyzDataToolStripMenuItem.Text" xml:space="preserve">
    <value>Importer des données XYZ</value>
  </data>
  <data name="importXyzDataToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Importer des données XYZ depuis le presse-papiers (valeurs x, y, z ou x, z séparées par des tabulations)</value>
  </data>
</root>